/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { featuresList } from "../../funcs/featuresList.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.GetAvailableFeaturesRequest$inboundSchema,
};

export const tool$featuresList: ToolDefinition<typeof args> = {
  name: "features-list",
  description: `List available features

Returns the list of all available features that Hedgewise
        tracks or produces. Some of these are used to produce our price and
        commodity production forecasts. The returned features can be filtered by futures contract symbol they can relate or by the dataset they belong to.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await featuresList(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
