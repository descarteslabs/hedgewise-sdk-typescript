/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { mcpOnlyGetSupplyLlm } from "../../funcs/mcpOnlyGetSupplyLlm.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.GetSupplyLlmRequest$inboundSchema,
};

export const tool$mcpOnlyGetSupplyLlm: ToolDefinition<typeof args> = {
  name: "mcp-only-get-supply-llm",
  description: `Get supply data for a commodity and country

Returns historical and forecasted supply data for a given
        commodity and country in optimized text format. Country codes follow the UN/LOCODE standard:
        https://unece.org/trade/cefact/unlocode-code-list-country-and-territory`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await mcpOnlyGetSupplyLlm(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    return formatResult(void 0, apiCall);
  },
};
