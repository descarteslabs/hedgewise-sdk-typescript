/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { McpServer } from "@modelcontextprotocol/sdk/server/mcp.js";
import { HedgewiseCore } from "../core.js";
import type { ConsoleLogger } from "./console-logger.js";
import { MCPScope, mcpScopes } from "./scopes.js";
import { createRegisterTool } from "./tools.js";
import { tool$assetsGetCategories } from "./tools/assetsGetCategories.js";
import { tool$dataGetMetadata } from "./tools/dataGetMetadata.js";
import { tool$featuresGetHistoricalValues } from "./tools/featuresGetHistoricalValues.js";
import { tool$featuresGetTransformedValues } from "./tools/featuresGetTransformedValues.js";
import { tool$featuresGetTree } from "./tools/featuresGetTree.js";
import { tool$featuresGetWeightedIndex } from "./tools/featuresGetWeightedIndex.js";
import { tool$featuresList } from "./tools/featuresList.js";
import { tool$forexGetPrices } from "./tools/forexGetPrices.js";
import { tool$forexListPrices } from "./tools/forexListPrices.js";
import { tool$futuresGetCalendar } from "./tools/futuresGetCalendar.js";
import { tool$futuresGetForecasts } from "./tools/futuresGetForecasts.js";
import { tool$futuresGetHedgeIndicator } from "./tools/futuresGetHedgeIndicator.js";
import { tool$futuresGetLongTermForecast } from "./tools/futuresGetLongTermForecast.js";
import { tool$futuresGetPrices } from "./tools/futuresGetPrices.js";
import { tool$futuresList } from "./tools/futuresList.js";
import { tool$indicatorsList } from "./tools/indicatorsList.js";
import { tool$performanceMetricsGet } from "./tools/performanceMetricsGet.js";
import { tool$performanceMetricsList } from "./tools/performanceMetricsList.js";
import { tool$sectorIndicesGet } from "./tools/sectorIndicesGet.js";
import { tool$supplyGet } from "./tools/supplyGet.js";
import { tool$supplyListCommodities } from "./tools/supplyListCommodities.js";
import { tool$systemPing } from "./tools/systemPing.js";

export function createMCPServer(deps: {
  logger: ConsoleLogger;
  scopes?: MCPScope[] | undefined;
  serverURL: string;
}) {
  const server = new McpServer({
    name: "Hedgewise",
    version: "0.1.3",
  });

  const client = new HedgewiseCore({
    serverURL: deps.serverURL,
  });
  const scopes = new Set(deps.scopes ?? mcpScopes);
  const tool = createRegisterTool(deps.logger, server, client, scopes);

  tool(tool$systemPing);
  tool(tool$dataGetMetadata);
  tool(tool$assetsGetCategories);
  tool(tool$futuresList);
  tool(tool$futuresGetCalendar);
  tool(tool$futuresGetForecasts);
  tool(tool$futuresGetLongTermForecast);
  tool(tool$futuresGetHedgeIndicator);
  tool(tool$futuresGetPrices);
  tool(tool$indicatorsList);
  tool(tool$forexListPrices);
  tool(tool$forexGetPrices);
  tool(tool$featuresGetTree);
  tool(tool$featuresList);
  tool(tool$featuresGetHistoricalValues);
  tool(tool$featuresGetTransformedValues);
  tool(tool$featuresGetWeightedIndex);
  tool(tool$sectorIndicesGet);
  tool(tool$performanceMetricsList);
  tool(tool$performanceMetricsGet);
  tool(tool$supplyListCommodities);
  tool(tool$supplyGet);

  return server;
}
