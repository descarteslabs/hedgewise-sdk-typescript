/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { performanceMetricsGet } from "../funcs/performanceMetricsGet.js";
import { performanceMetricsList } from "../funcs/performanceMetricsList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class PerformanceMetrics extends ClientSDK {
  /**
   * List available performance metrics and related models
   *
   * @remarks
   * Returns the list of success data that can be requested to assess our forecasting models performance
   */
  async list(
    options?: RequestOptions,
  ): Promise<components.GetAvailablePerformanceMetricsResponse> {
    return unwrapAsync(performanceMetricsList(
      this,
      options,
    ));
  }

  /**
   * Get performance related data metrics for a given futures price forecast model at a given horizon.
   *
   * @remarks
   * The metrics values are not provided as-is, but the relevant data and recommended aggregation method for each metric is returned.
   */
  async get(
    request: operations.GetPerformanceMetricsRequest,
    options?: RequestOptions,
  ): Promise<components.GetPerformanceMetricsResponse> {
    return unwrapAsync(performanceMetricsGet(
      this,
      request,
      options,
    ));
  }
}
