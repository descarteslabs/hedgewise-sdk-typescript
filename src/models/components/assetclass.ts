/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AssetClass = {
  symbol: string;
  name: string;
};

/** @internal */
export const AssetClass$inboundSchema: z.ZodType<
  AssetClass,
  z.ZodTypeDef,
  unknown
> = z.object({
  symbol: z.string(),
  name: z.string(),
});

/** @internal */
export type AssetClass$Outbound = {
  symbol: string;
  name: string;
};

/** @internal */
export const AssetClass$outboundSchema: z.ZodType<
  AssetClass$Outbound,
  z.ZodTypeDef,
  AssetClass
> = z.object({
  symbol: z.string(),
  name: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AssetClass$ {
  /** @deprecated use `AssetClass$inboundSchema` instead. */
  export const inboundSchema = AssetClass$inboundSchema;
  /** @deprecated use `AssetClass$outboundSchema` instead. */
  export const outboundSchema = AssetClass$outboundSchema;
  /** @deprecated use `AssetClass$Outbound` instead. */
  export type Outbound = AssetClass$Outbound;
}

export function assetClassToJSON(assetClass: AssetClass): string {
  return JSON.stringify(AssetClass$outboundSchema.parse(assetClass));
}

export function assetClassFromJSON(
  jsonString: string,
): SafeParseResult<AssetClass, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AssetClass$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AssetClass' from JSON`,
  );
}
