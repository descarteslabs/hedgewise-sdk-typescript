/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AssetPriceData,
  AssetPriceData$inboundSchema,
  AssetPriceData$Outbound,
  AssetPriceData$outboundSchema,
} from "./assetpricedata.js";

export type GetAssetPricesResponse = {
  success?: true | undefined;
  data: AssetPriceData;
};

/** @internal */
export const GetAssetPricesResponse$inboundSchema: z.ZodType<
  GetAssetPricesResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.literal(true).default(true).optional(),
  data: AssetPriceData$inboundSchema,
});

/** @internal */
export type GetAssetPricesResponse$Outbound = {
  success: true;
  data: AssetPriceData$Outbound;
};

/** @internal */
export const GetAssetPricesResponse$outboundSchema: z.ZodType<
  GetAssetPricesResponse$Outbound,
  z.ZodTypeDef,
  GetAssetPricesResponse
> = z.object({
  success: z.literal(true).default(true as const),
  data: AssetPriceData$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAssetPricesResponse$ {
  /** @deprecated use `GetAssetPricesResponse$inboundSchema` instead. */
  export const inboundSchema = GetAssetPricesResponse$inboundSchema;
  /** @deprecated use `GetAssetPricesResponse$outboundSchema` instead. */
  export const outboundSchema = GetAssetPricesResponse$outboundSchema;
  /** @deprecated use `GetAssetPricesResponse$Outbound` instead. */
  export type Outbound = GetAssetPricesResponse$Outbound;
}

export function getAssetPricesResponseToJSON(
  getAssetPricesResponse: GetAssetPricesResponse,
): string {
  return JSON.stringify(
    GetAssetPricesResponse$outboundSchema.parse(getAssetPricesResponse),
  );
}

export function getAssetPricesResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetAssetPricesResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetAssetPricesResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetAssetPricesResponse' from JSON`,
  );
}
