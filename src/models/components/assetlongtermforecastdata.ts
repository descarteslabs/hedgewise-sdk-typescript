/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  Asset,
  Asset$inboundSchema,
  Asset$Outbound,
  Asset$outboundSchema,
} from "./asset.js";
import {
  LongTermForecast,
  LongTermForecast$inboundSchema,
  LongTermForecast$Outbound,
  LongTermForecast$outboundSchema,
} from "./longtermforecast.js";
import {
  MarketDriver,
  MarketDriver$inboundSchema,
  MarketDriver$Outbound,
  MarketDriver$outboundSchema,
} from "./marketdriver.js";

export type AssetLongTermForecastData = {
  asset: Asset;
  longTermForecast: Array<LongTermForecast>;
  marketDrivers: Array<MarketDriver> | null;
};

/** @internal */
export const AssetLongTermForecastData$inboundSchema: z.ZodType<
  AssetLongTermForecastData,
  z.ZodTypeDef,
  unknown
> = z.object({
  asset: Asset$inboundSchema,
  long_term_forecast: z.array(LongTermForecast$inboundSchema),
  market_drivers: z.nullable(z.array(MarketDriver$inboundSchema)),
}).transform((v) => {
  return remap$(v, {
    "long_term_forecast": "longTermForecast",
    "market_drivers": "marketDrivers",
  });
});

/** @internal */
export type AssetLongTermForecastData$Outbound = {
  asset: Asset$Outbound;
  long_term_forecast: Array<LongTermForecast$Outbound>;
  market_drivers: Array<MarketDriver$Outbound> | null;
};

/** @internal */
export const AssetLongTermForecastData$outboundSchema: z.ZodType<
  AssetLongTermForecastData$Outbound,
  z.ZodTypeDef,
  AssetLongTermForecastData
> = z.object({
  asset: Asset$outboundSchema,
  longTermForecast: z.array(LongTermForecast$outboundSchema),
  marketDrivers: z.nullable(z.array(MarketDriver$outboundSchema)),
}).transform((v) => {
  return remap$(v, {
    longTermForecast: "long_term_forecast",
    marketDrivers: "market_drivers",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AssetLongTermForecastData$ {
  /** @deprecated use `AssetLongTermForecastData$inboundSchema` instead. */
  export const inboundSchema = AssetLongTermForecastData$inboundSchema;
  /** @deprecated use `AssetLongTermForecastData$outboundSchema` instead. */
  export const outboundSchema = AssetLongTermForecastData$outboundSchema;
  /** @deprecated use `AssetLongTermForecastData$Outbound` instead. */
  export type Outbound = AssetLongTermForecastData$Outbound;
}

export function assetLongTermForecastDataToJSON(
  assetLongTermForecastData: AssetLongTermForecastData,
): string {
  return JSON.stringify(
    AssetLongTermForecastData$outboundSchema.parse(assetLongTermForecastData),
  );
}

export function assetLongTermForecastDataFromJSON(
  jsonString: string,
): SafeParseResult<AssetLongTermForecastData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AssetLongTermForecastData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AssetLongTermForecastData' from JSON`,
  );
}
