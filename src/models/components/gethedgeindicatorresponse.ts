/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AssetIndicatorData,
  AssetIndicatorData$inboundSchema,
  AssetIndicatorData$Outbound,
  AssetIndicatorData$outboundSchema,
} from "./assetindicatordata.js";

export type GetHedgeIndicatorResponse = {
  success?: true | undefined;
  data: AssetIndicatorData;
};

/** @internal */
export const GetHedgeIndicatorResponse$inboundSchema: z.ZodType<
  GetHedgeIndicatorResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.literal(true).optional(),
  data: AssetIndicatorData$inboundSchema,
});

/** @internal */
export type GetHedgeIndicatorResponse$Outbound = {
  success: true;
  data: AssetIndicatorData$Outbound;
};

/** @internal */
export const GetHedgeIndicatorResponse$outboundSchema: z.ZodType<
  GetHedgeIndicatorResponse$Outbound,
  z.ZodTypeDef,
  GetHedgeIndicatorResponse
> = z.object({
  success: z.literal(true).default(true as const),
  data: AssetIndicatorData$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetHedgeIndicatorResponse$ {
  /** @deprecated use `GetHedgeIndicatorResponse$inboundSchema` instead. */
  export const inboundSchema = GetHedgeIndicatorResponse$inboundSchema;
  /** @deprecated use `GetHedgeIndicatorResponse$outboundSchema` instead. */
  export const outboundSchema = GetHedgeIndicatorResponse$outboundSchema;
  /** @deprecated use `GetHedgeIndicatorResponse$Outbound` instead. */
  export type Outbound = GetHedgeIndicatorResponse$Outbound;
}

export function getHedgeIndicatorResponseToJSON(
  getHedgeIndicatorResponse: GetHedgeIndicatorResponse,
): string {
  return JSON.stringify(
    GetHedgeIndicatorResponse$outboundSchema.parse(getHedgeIndicatorResponse),
  );
}

export function getHedgeIndicatorResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetHedgeIndicatorResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetHedgeIndicatorResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetHedgeIndicatorResponse' from JSON`,
  );
}
