/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AssetForecastModelData,
  AssetForecastModelData$inboundSchema,
  AssetForecastModelData$Outbound,
  AssetForecastModelData$outboundSchema,
} from "./assetforecastmodeldata.js";

export type GetAssetForecastsModelsResponse = {
  success?: true | undefined;
  data: Array<AssetForecastModelData>;
};

/** @internal */
export const GetAssetForecastsModelsResponse$inboundSchema: z.ZodType<
  GetAssetForecastsModelsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.literal(true).optional(),
  data: z.array(AssetForecastModelData$inboundSchema),
});

/** @internal */
export type GetAssetForecastsModelsResponse$Outbound = {
  success: true;
  data: Array<AssetForecastModelData$Outbound>;
};

/** @internal */
export const GetAssetForecastsModelsResponse$outboundSchema: z.ZodType<
  GetAssetForecastsModelsResponse$Outbound,
  z.ZodTypeDef,
  GetAssetForecastsModelsResponse
> = z.object({
  success: z.literal(true).default(true as const),
  data: z.array(AssetForecastModelData$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAssetForecastsModelsResponse$ {
  /** @deprecated use `GetAssetForecastsModelsResponse$inboundSchema` instead. */
  export const inboundSchema = GetAssetForecastsModelsResponse$inboundSchema;
  /** @deprecated use `GetAssetForecastsModelsResponse$outboundSchema` instead. */
  export const outboundSchema = GetAssetForecastsModelsResponse$outboundSchema;
  /** @deprecated use `GetAssetForecastsModelsResponse$Outbound` instead. */
  export type Outbound = GetAssetForecastsModelsResponse$Outbound;
}

export function getAssetForecastsModelsResponseToJSON(
  getAssetForecastsModelsResponse: GetAssetForecastsModelsResponse,
): string {
  return JSON.stringify(
    GetAssetForecastsModelsResponse$outboundSchema.parse(
      getAssetForecastsModelsResponse,
    ),
  );
}

export function getAssetForecastsModelsResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetAssetForecastsModelsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetAssetForecastsModelsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetAssetForecastsModelsResponse' from JSON`,
  );
}
