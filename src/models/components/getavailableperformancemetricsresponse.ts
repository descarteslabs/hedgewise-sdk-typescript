/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  PerformanceMetric,
  PerformanceMetric$inboundSchema,
  PerformanceMetric$Outbound,
  PerformanceMetric$outboundSchema,
} from "./performancemetric.js";

export type GetAvailablePerformanceMetricsResponse = {
  success?: true | undefined;
  data: Array<PerformanceMetric>;
};

/** @internal */
export const GetAvailablePerformanceMetricsResponse$inboundSchema: z.ZodType<
  GetAvailablePerformanceMetricsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.literal(true).default(true).optional(),
  data: z.array(PerformanceMetric$inboundSchema),
});

/** @internal */
export type GetAvailablePerformanceMetricsResponse$Outbound = {
  success: true;
  data: Array<PerformanceMetric$Outbound>;
};

/** @internal */
export const GetAvailablePerformanceMetricsResponse$outboundSchema: z.ZodType<
  GetAvailablePerformanceMetricsResponse$Outbound,
  z.ZodTypeDef,
  GetAvailablePerformanceMetricsResponse
> = z.object({
  success: z.literal(true).default(true as const),
  data: z.array(PerformanceMetric$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAvailablePerformanceMetricsResponse$ {
  /** @deprecated use `GetAvailablePerformanceMetricsResponse$inboundSchema` instead. */
  export const inboundSchema =
    GetAvailablePerformanceMetricsResponse$inboundSchema;
  /** @deprecated use `GetAvailablePerformanceMetricsResponse$outboundSchema` instead. */
  export const outboundSchema =
    GetAvailablePerformanceMetricsResponse$outboundSchema;
  /** @deprecated use `GetAvailablePerformanceMetricsResponse$Outbound` instead. */
  export type Outbound = GetAvailablePerformanceMetricsResponse$Outbound;
}

export function getAvailablePerformanceMetricsResponseToJSON(
  getAvailablePerformanceMetricsResponse:
    GetAvailablePerformanceMetricsResponse,
): string {
  return JSON.stringify(
    GetAvailablePerformanceMetricsResponse$outboundSchema.parse(
      getAvailablePerformanceMetricsResponse,
    ),
  );
}

export function getAvailablePerformanceMetricsResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetAvailablePerformanceMetricsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetAvailablePerformanceMetricsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetAvailablePerformanceMetricsResponse' from JSON`,
  );
}
