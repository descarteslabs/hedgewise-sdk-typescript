/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AvailableSupplyModels,
  AvailableSupplyModels$inboundSchema,
  AvailableSupplyModels$Outbound,
  AvailableSupplyModels$outboundSchema,
} from "./availablesupplymodels.js";

export type GetAvailableSupplyCommoditiesResponse = {
  success?: true | undefined;
  data: Array<AvailableSupplyModels>;
};

/** @internal */
export const GetAvailableSupplyCommoditiesResponse$inboundSchema: z.ZodType<
  GetAvailableSupplyCommoditiesResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.literal(true).optional(),
  data: z.array(AvailableSupplyModels$inboundSchema),
});

/** @internal */
export type GetAvailableSupplyCommoditiesResponse$Outbound = {
  success: true;
  data: Array<AvailableSupplyModels$Outbound>;
};

/** @internal */
export const GetAvailableSupplyCommoditiesResponse$outboundSchema: z.ZodType<
  GetAvailableSupplyCommoditiesResponse$Outbound,
  z.ZodTypeDef,
  GetAvailableSupplyCommoditiesResponse
> = z.object({
  success: z.literal(true).default(true as const),
  data: z.array(AvailableSupplyModels$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAvailableSupplyCommoditiesResponse$ {
  /** @deprecated use `GetAvailableSupplyCommoditiesResponse$inboundSchema` instead. */
  export const inboundSchema =
    GetAvailableSupplyCommoditiesResponse$inboundSchema;
  /** @deprecated use `GetAvailableSupplyCommoditiesResponse$outboundSchema` instead. */
  export const outboundSchema =
    GetAvailableSupplyCommoditiesResponse$outboundSchema;
  /** @deprecated use `GetAvailableSupplyCommoditiesResponse$Outbound` instead. */
  export type Outbound = GetAvailableSupplyCommoditiesResponse$Outbound;
}

export function getAvailableSupplyCommoditiesResponseToJSON(
  getAvailableSupplyCommoditiesResponse: GetAvailableSupplyCommoditiesResponse,
): string {
  return JSON.stringify(
    GetAvailableSupplyCommoditiesResponse$outboundSchema.parse(
      getAvailableSupplyCommoditiesResponse,
    ),
  );
}

export function getAvailableSupplyCommoditiesResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetAvailableSupplyCommoditiesResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetAvailableSupplyCommoditiesResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetAvailableSupplyCommoditiesResponse' from JSON`,
  );
}
