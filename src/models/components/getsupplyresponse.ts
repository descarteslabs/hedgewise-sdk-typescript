/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  SupplyData,
  SupplyData$inboundSchema,
  SupplyData$Outbound,
  SupplyData$outboundSchema,
} from "./supplydata.js";

export type GetSupplyResponse = {
  success?: true | undefined;
  data: Array<SupplyData>;
};

/** @internal */
export const GetSupplyResponse$inboundSchema: z.ZodType<
  GetSupplyResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.literal(true).default(true).optional(),
  data: z.array(SupplyData$inboundSchema),
});

/** @internal */
export type GetSupplyResponse$Outbound = {
  success: true;
  data: Array<SupplyData$Outbound>;
};

/** @internal */
export const GetSupplyResponse$outboundSchema: z.ZodType<
  GetSupplyResponse$Outbound,
  z.ZodTypeDef,
  GetSupplyResponse
> = z.object({
  success: z.literal(true).default(true as const),
  data: z.array(SupplyData$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetSupplyResponse$ {
  /** @deprecated use `GetSupplyResponse$inboundSchema` instead. */
  export const inboundSchema = GetSupplyResponse$inboundSchema;
  /** @deprecated use `GetSupplyResponse$outboundSchema` instead. */
  export const outboundSchema = GetSupplyResponse$outboundSchema;
  /** @deprecated use `GetSupplyResponse$Outbound` instead. */
  export type Outbound = GetSupplyResponse$Outbound;
}

export function getSupplyResponseToJSON(
  getSupplyResponse: GetSupplyResponse,
): string {
  return JSON.stringify(
    GetSupplyResponse$outboundSchema.parse(getSupplyResponse),
  );
}

export function getSupplyResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetSupplyResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetSupplyResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetSupplyResponse' from JSON`,
  );
}
