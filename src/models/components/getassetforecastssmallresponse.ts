/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AssetForecastSmallData,
  AssetForecastSmallData$inboundSchema,
  AssetForecastSmallData$Outbound,
  AssetForecastSmallData$outboundSchema,
} from "./assetforecastsmalldata.js";

export type GetAssetForecastsSmallResponse = {
  success?: true | undefined;
  data: AssetForecastSmallData;
};

/** @internal */
export const GetAssetForecastsSmallResponse$inboundSchema: z.ZodType<
  GetAssetForecastsSmallResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.literal(true).default(true).optional(),
  data: AssetForecastSmallData$inboundSchema,
});

/** @internal */
export type GetAssetForecastsSmallResponse$Outbound = {
  success: true;
  data: AssetForecastSmallData$Outbound;
};

/** @internal */
export const GetAssetForecastsSmallResponse$outboundSchema: z.ZodType<
  GetAssetForecastsSmallResponse$Outbound,
  z.ZodTypeDef,
  GetAssetForecastsSmallResponse
> = z.object({
  success: z.literal(true).default(true as const),
  data: AssetForecastSmallData$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAssetForecastsSmallResponse$ {
  /** @deprecated use `GetAssetForecastsSmallResponse$inboundSchema` instead. */
  export const inboundSchema = GetAssetForecastsSmallResponse$inboundSchema;
  /** @deprecated use `GetAssetForecastsSmallResponse$outboundSchema` instead. */
  export const outboundSchema = GetAssetForecastsSmallResponse$outboundSchema;
  /** @deprecated use `GetAssetForecastsSmallResponse$Outbound` instead. */
  export type Outbound = GetAssetForecastsSmallResponse$Outbound;
}

export function getAssetForecastsSmallResponseToJSON(
  getAssetForecastsSmallResponse: GetAssetForecastsSmallResponse,
): string {
  return JSON.stringify(
    GetAssetForecastsSmallResponse$outboundSchema.parse(
      getAssetForecastsSmallResponse,
    ),
  );
}

export function getAssetForecastsSmallResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetAssetForecastsSmallResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetAssetForecastsSmallResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetAssetForecastsSmallResponse' from JSON`,
  );
}
