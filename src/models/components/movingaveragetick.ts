/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type MovingAverageTick = {
  date: Date;
  value: number;
};

/** @internal */
export const MovingAverageTick$inboundSchema: z.ZodType<
  MovingAverageTick,
  z.ZodTypeDef,
  unknown
> = z.object({
  date: z.string().datetime({ offset: true }).transform(v => new Date(v)),
  value: z.number(),
});

/** @internal */
export type MovingAverageTick$Outbound = {
  date: string;
  value: number;
};

/** @internal */
export const MovingAverageTick$outboundSchema: z.ZodType<
  MovingAverageTick$Outbound,
  z.ZodTypeDef,
  MovingAverageTick
> = z.object({
  date: z.date().transform(v => v.toISOString()),
  value: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MovingAverageTick$ {
  /** @deprecated use `MovingAverageTick$inboundSchema` instead. */
  export const inboundSchema = MovingAverageTick$inboundSchema;
  /** @deprecated use `MovingAverageTick$outboundSchema` instead. */
  export const outboundSchema = MovingAverageTick$outboundSchema;
  /** @deprecated use `MovingAverageTick$Outbound` instead. */
  export type Outbound = MovingAverageTick$Outbound;
}

export function movingAverageTickToJSON(
  movingAverageTick: MovingAverageTick,
): string {
  return JSON.stringify(
    MovingAverageTick$outboundSchema.parse(movingAverageTick),
  );
}

export function movingAverageTickFromJSON(
  jsonString: string,
): SafeParseResult<MovingAverageTick, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MovingAverageTick$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MovingAverageTick' from JSON`,
  );
}
