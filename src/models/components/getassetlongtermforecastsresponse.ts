/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AssetLongTermForecastData,
  AssetLongTermForecastData$inboundSchema,
  AssetLongTermForecastData$Outbound,
  AssetLongTermForecastData$outboundSchema,
} from "./assetlongtermforecastdata.js";

export type GetAssetLongTermForecastsResponse = {
  success?: true | undefined;
  data: AssetLongTermForecastData;
};

/** @internal */
export const GetAssetLongTermForecastsResponse$inboundSchema: z.ZodType<
  GetAssetLongTermForecastsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.literal(true).default(true).optional(),
  data: AssetLongTermForecastData$inboundSchema,
});

/** @internal */
export type GetAssetLongTermForecastsResponse$Outbound = {
  success: true;
  data: AssetLongTermForecastData$Outbound;
};

/** @internal */
export const GetAssetLongTermForecastsResponse$outboundSchema: z.ZodType<
  GetAssetLongTermForecastsResponse$Outbound,
  z.ZodTypeDef,
  GetAssetLongTermForecastsResponse
> = z.object({
  success: z.literal(true).default(true as const),
  data: AssetLongTermForecastData$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAssetLongTermForecastsResponse$ {
  /** @deprecated use `GetAssetLongTermForecastsResponse$inboundSchema` instead. */
  export const inboundSchema = GetAssetLongTermForecastsResponse$inboundSchema;
  /** @deprecated use `GetAssetLongTermForecastsResponse$outboundSchema` instead. */
  export const outboundSchema =
    GetAssetLongTermForecastsResponse$outboundSchema;
  /** @deprecated use `GetAssetLongTermForecastsResponse$Outbound` instead. */
  export type Outbound = GetAssetLongTermForecastsResponse$Outbound;
}

export function getAssetLongTermForecastsResponseToJSON(
  getAssetLongTermForecastsResponse: GetAssetLongTermForecastsResponse,
): string {
  return JSON.stringify(
    GetAssetLongTermForecastsResponse$outboundSchema.parse(
      getAssetLongTermForecastsResponse,
    ),
  );
}

export function getAssetLongTermForecastsResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetAssetLongTermForecastsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetAssetLongTermForecastsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetAssetLongTermForecastsResponse' from JSON`,
  );
}
