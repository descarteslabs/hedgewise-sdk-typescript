/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ModelOutput,
  ModelOutput$inboundSchema,
  ModelOutput$Outbound,
  ModelOutput$outboundSchema,
} from "./modeloutput.js";

export type GetModelOutputResponse = {
  success?: true | undefined;
  data: Array<ModelOutput>;
};

/** @internal */
export const GetModelOutputResponse$inboundSchema: z.ZodType<
  GetModelOutputResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.literal(true).optional(),
  data: z.array(ModelOutput$inboundSchema),
});

/** @internal */
export type GetModelOutputResponse$Outbound = {
  success: true;
  data: Array<ModelOutput$Outbound>;
};

/** @internal */
export const GetModelOutputResponse$outboundSchema: z.ZodType<
  GetModelOutputResponse$Outbound,
  z.ZodTypeDef,
  GetModelOutputResponse
> = z.object({
  success: z.literal(true).default(true as const),
  data: z.array(ModelOutput$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetModelOutputResponse$ {
  /** @deprecated use `GetModelOutputResponse$inboundSchema` instead. */
  export const inboundSchema = GetModelOutputResponse$inboundSchema;
  /** @deprecated use `GetModelOutputResponse$outboundSchema` instead. */
  export const outboundSchema = GetModelOutputResponse$outboundSchema;
  /** @deprecated use `GetModelOutputResponse$Outbound` instead. */
  export type Outbound = GetModelOutputResponse$Outbound;
}

export function getModelOutputResponseToJSON(
  getModelOutputResponse: GetModelOutputResponse,
): string {
  return JSON.stringify(
    GetModelOutputResponse$outboundSchema.parse(getModelOutputResponse),
  );
}

export function getModelOutputResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetModelOutputResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetModelOutputResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetModelOutputResponse' from JSON`,
  );
}
