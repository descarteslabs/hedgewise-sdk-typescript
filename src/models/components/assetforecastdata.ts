/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  Asset,
  Asset$inboundSchema,
  Asset$Outbound,
  Asset$outboundSchema,
} from "./asset.js";
import {
  ContractWithForecasts,
  ContractWithForecasts$inboundSchema,
  ContractWithForecasts$Outbound,
  ContractWithForecasts$outboundSchema,
} from "./contractwithforecasts.js";

export type AssetForecastData = {
  asset: Asset;
  contracts: Array<ContractWithForecasts>;
};

/** @internal */
export const AssetForecastData$inboundSchema: z.ZodType<
  AssetForecastData,
  z.ZodTypeDef,
  unknown
> = z.object({
  asset: Asset$inboundSchema,
  contracts: z.array(ContractWithForecasts$inboundSchema),
});

/** @internal */
export type AssetForecastData$Outbound = {
  asset: Asset$Outbound;
  contracts: Array<ContractWithForecasts$Outbound>;
};

/** @internal */
export const AssetForecastData$outboundSchema: z.ZodType<
  AssetForecastData$Outbound,
  z.ZodTypeDef,
  AssetForecastData
> = z.object({
  asset: Asset$outboundSchema,
  contracts: z.array(ContractWithForecasts$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AssetForecastData$ {
  /** @deprecated use `AssetForecastData$inboundSchema` instead. */
  export const inboundSchema = AssetForecastData$inboundSchema;
  /** @deprecated use `AssetForecastData$outboundSchema` instead. */
  export const outboundSchema = AssetForecastData$outboundSchema;
  /** @deprecated use `AssetForecastData$Outbound` instead. */
  export type Outbound = AssetForecastData$Outbound;
}

export function assetForecastDataToJSON(
  assetForecastData: AssetForecastData,
): string {
  return JSON.stringify(
    AssetForecastData$outboundSchema.parse(assetForecastData),
  );
}

export function assetForecastDataFromJSON(
  jsonString: string,
): SafeParseResult<AssetForecastData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AssetForecastData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AssetForecastData' from JSON`,
  );
}
