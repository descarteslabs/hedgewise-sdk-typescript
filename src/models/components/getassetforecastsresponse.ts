/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AssetForecastData,
  AssetForecastData$inboundSchema,
  AssetForecastData$Outbound,
  AssetForecastData$outboundSchema,
} from "./assetforecastdata.js";

export type GetAssetForecastsResponse = {
  success?: true | undefined;
  data: AssetForecastData;
};

/** @internal */
export const GetAssetForecastsResponse$inboundSchema: z.ZodType<
  GetAssetForecastsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.literal(true).optional(),
  data: AssetForecastData$inboundSchema,
});

/** @internal */
export type GetAssetForecastsResponse$Outbound = {
  success: true;
  data: AssetForecastData$Outbound;
};

/** @internal */
export const GetAssetForecastsResponse$outboundSchema: z.ZodType<
  GetAssetForecastsResponse$Outbound,
  z.ZodTypeDef,
  GetAssetForecastsResponse
> = z.object({
  success: z.literal(true).default(true as const),
  data: AssetForecastData$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAssetForecastsResponse$ {
  /** @deprecated use `GetAssetForecastsResponse$inboundSchema` instead. */
  export const inboundSchema = GetAssetForecastsResponse$inboundSchema;
  /** @deprecated use `GetAssetForecastsResponse$outboundSchema` instead. */
  export const outboundSchema = GetAssetForecastsResponse$outboundSchema;
  /** @deprecated use `GetAssetForecastsResponse$Outbound` instead. */
  export type Outbound = GetAssetForecastsResponse$Outbound;
}

export function getAssetForecastsResponseToJSON(
  getAssetForecastsResponse: GetAssetForecastsResponse,
): string {
  return JSON.stringify(
    GetAssetForecastsResponse$outboundSchema.parse(getAssetForecastsResponse),
  );
}

export function getAssetForecastsResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetAssetForecastsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetAssetForecastsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetAssetForecastsResponse' from JSON`,
  );
}
