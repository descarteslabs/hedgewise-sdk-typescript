/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetFuturesForecastsModelsRequest = {
  /**
   * Future symbol
   */
  symbol: string;
  /**
   * Expose additional details about the models available
   */
  details?: boolean | undefined;
};

/** @internal */
export const GetFuturesForecastsModelsRequest$inboundSchema: z.ZodType<
  GetFuturesForecastsModelsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  symbol: z.string(),
  details: z.boolean().default(false),
});

/** @internal */
export type GetFuturesForecastsModelsRequest$Outbound = {
  symbol: string;
  details: boolean;
};

/** @internal */
export const GetFuturesForecastsModelsRequest$outboundSchema: z.ZodType<
  GetFuturesForecastsModelsRequest$Outbound,
  z.ZodTypeDef,
  GetFuturesForecastsModelsRequest
> = z.object({
  symbol: z.string(),
  details: z.boolean().default(false),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetFuturesForecastsModelsRequest$ {
  /** @deprecated use `GetFuturesForecastsModelsRequest$inboundSchema` instead. */
  export const inboundSchema = GetFuturesForecastsModelsRequest$inboundSchema;
  /** @deprecated use `GetFuturesForecastsModelsRequest$outboundSchema` instead. */
  export const outboundSchema = GetFuturesForecastsModelsRequest$outboundSchema;
  /** @deprecated use `GetFuturesForecastsModelsRequest$Outbound` instead. */
  export type Outbound = GetFuturesForecastsModelsRequest$Outbound;
}

export function getFuturesForecastsModelsRequestToJSON(
  getFuturesForecastsModelsRequest: GetFuturesForecastsModelsRequest,
): string {
  return JSON.stringify(
    GetFuturesForecastsModelsRequest$outboundSchema.parse(
      getFuturesForecastsModelsRequest,
    ),
  );
}

export function getFuturesForecastsModelsRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetFuturesForecastsModelsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetFuturesForecastsModelsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetFuturesForecastsModelsRequest' from JSON`,
  );
}
