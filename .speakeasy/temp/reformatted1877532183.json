{
  "openapi": "3.1.0",
  "info": {
    "title": "Hedgewise",
    "summary": "Hedgewise API",
    "description": "Access to Hedgewise data provided by Descartes Labs.",
    "version": "1.0.0",
    "x-logo": {
      "url": "https://hedgewise.descarteslabs.com/logo-icon.svg"
    }
  },
  "paths": {
    "/ping": {
      "get": {
        "summary": "Ping",
        "operationId": "ping",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PingResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/data": {
      "get": {
        "summary": "Get metadata and most recent prices",
        "description": "Returns a list of all asset classes, assets, and currently\n        active contracts tracked by Hedgewise, as well as their prices from\n        the prior trading day. Used to build the table on the Hedgewise\n        landing page.",
        "operationId": "get_data",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/assets": {
      "get": {
        "summary": "List available asset categories (e.g. Futures)",
        "description": "Returns a list of all available asset categories, such as\n        futures. Prices, forecasts, and indicators are available for each.",
        "operationId": "get_available_asset_categories",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAvailableAssetCategoriesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/assets/futures": {
      "get": {
        "summary": "List all available futures",
        "description": "Returns a list of all available future symbols that\n        Hedgewise tracks.",
        "operationId": "get_available_futures",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAvailableFuturesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/assets/futures/calendars/{symbol}": {
      "get": {
        "summary": "Get trading calendar for a future",
        "description": "Returns a list of all trading days for a given future\n        symbol, based on the exchange where its contracts are traded. Prices,\n        forecasts, and indicators are available for each of these days.",
        "operationId": "get_asset_calendar",
        "parameters": [
          {
            "name": "symbol",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[A-Z]*",
              "description": "Future symbol",
              "examples": [
                "ZC"
              ],
              "title": "Symbol"
            },
            "description": "Future symbol",
            "example": "ZC"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start of trading calendar window (YYYY-MM-DD)",
              "examples": [
                "2025-02-23"
              ],
              "title": "Start Date"
            },
            "description": "Start of trading calendar window (YYYY-MM-DD)",
            "example": "2025-02-23"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End of trading calendar window (YYYY-MM-DD)",
              "examples": [
                "2025-03-02"
              ],
              "title": "End Date"
            },
            "description": "End of trading calendar window (YYYY-MM-DD)",
            "example": "2025-03-02"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAssetCalendarResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/assets/futures/forecasts/{symbol}": {
      "get": {
        "summary": "Get forecasts for a future",
        "description": "Returns a list of all forecasts made for a given future\n        symbol. Forecasts are made at various horizons, and can be interpolated\n        to daily values. Forecasted prices, estimated lower and upper bounds,\n        and market drivers are available for each forecast.",
        "operationId": "get_futures_forecasts",
        "parameters": [
          {
            "name": "symbol",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[A-Z]*",
              "description": "Future symbol",
              "examples": [
                "ZC"
              ],
              "title": "Symbol"
            },
            "description": "Future symbol",
            "example": "ZC"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start of forecast window (YYYY-MM-DD). The returned\n                object will contain every forecast made between start_date and\n                end_date. _Default value_ : most recent date with forecasts",
              "examples": [
                "2025-03-01"
              ],
              "title": "Start Date"
            },
            "description": "Start of forecast window (YYYY-MM-DD). The returned\n                object will contain every forecast made between start_date and\n                end_date. _Default value_ : most recent date with forecasts",
            "example": "2025-03-01"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End of forecast window (YYYY-MM-DD). The returned\n                object will contain every forecast made between start_date and\n                end_date. _Default value_ : most recent date with forecasts",
              "examples": [
                "2025-03-01"
              ],
              "title": "End Date"
            },
            "description": "End of forecast window (YYYY-MM-DD). The returned\n                object will contain every forecast made between start_date and\n                end_date. _Default value_ : most recent date with forecasts",
            "example": "2025-03-01"
          },
          {
            "name": "interpolate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Interpolate between forecast horizons and return\n            daily forecast.",
              "default": false,
              "title": "Interpolate"
            },
            "description": "Interpolate between forecast horizons and return\n            daily forecast."
          },
          {
            "name": "estimate_uncertainty",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Estimate prediction uncertainty based on recent\n                historical accuracy.",
              "default": false,
              "title": "Estimate Uncertainty"
            },
            "description": "Estimate prediction uncertainty based on recent\n                historical accuracy."
          },
          {
            "name": "get_market_drivers",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Return market drivers for each forecast.",
              "default": false,
              "title": "Get Market Drivers"
            },
            "description": "Return market drivers for each forecast."
          },
          {
            "name": "get_moving_averages",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Return moving averages for each forecast.",
              "default": false,
              "title": "Get Moving Averages"
            },
            "description": "Return moving averages for each forecast."
          },
          {
            "name": "price_collar_sigma",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "description": "Apply an empirical price collar to the forecasts. This regulates the forecast when it suggests implausibly large price changes. A smaller number results in a more aggressive collar. Must be a positive number.",
              "default": 0,
              "title": "Price Collar Sigma"
            },
            "description": "Apply an empirical price collar to the forecasts. This regulates the forecast when it suggests implausibly large price changes. A smaller number results in a more aggressive collar. Must be a positive number."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAssetForecastsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/assets/futures/forecasts/{symbol}/long_term_forecast": {
      "get": {
        "summary": "Get long-term forecast for a future",
        "description": "Returns a list of booleans indicating whether the price of the given future is expected to increase over the next 12 months.",
        "operationId": "get_long_term_forecast",
        "parameters": [
          {
            "name": "symbol",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[A-Z]*",
              "description": "Future symbol",
              "examples": [
                "ZC",
                "KC",
                "RC"
              ],
              "title": "Symbol"
            },
            "description": "Future symbol",
            "example": "ZC"
          },
          {
            "name": "horizon",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Number of months to forecast. _Default value_ : Shortest available term for requested symbol.",
              "examples": [
                12,
                18
              ],
              "title": "Horizon"
            },
            "description": "Number of months to forecast. _Default value_ : Shortest available term for requested symbol.",
            "example": 12
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start of forecast window (YYYY-MM-DD). The returned\n                object will contain every forecast made between start_date and\n                end_date. _Default value_ : most recent date with forecasts",
              "examples": [
                "2025-02-02"
              ],
              "title": "Start Date"
            },
            "description": "Start of forecast window (YYYY-MM-DD). The returned\n                object will contain every forecast made between start_date and\n                end_date. _Default value_ : most recent date with forecasts",
            "example": "2025-02-02"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End of forecast window (YYYY-MM-DD). The returned\n                object will contain every forecast made between start_date and\n                end_date. _Default value_ : most recent date with forecasts",
              "examples": [
                "2025-03-02"
              ],
              "title": "End Date"
            },
            "description": "End of forecast window (YYYY-MM-DD). The returned\n                object will contain every forecast made between start_date and\n                end_date. _Default value_ : most recent date with forecasts",
            "example": "2025-03-02"
          },
          {
            "name": "rollover_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^(hist_vol|max_vol|first_notice|last_trade)$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Which rollover method to use. _Default value_ : hist_vol",
              "examples": [
                "hist_vol",
                "max_vol",
                "first_notice",
                "last_trade"
              ],
              "default": "hist_vol",
              "title": "Rollover Type"
            },
            "description": "Which rollover method to use. _Default value_ : hist_vol",
            "example": "hist_vol"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAssetLongTermForecastsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/assets/futures/indicators": {
      "get": {
        "summary": "List available indicators",
        "description": "Returns the list of all available market indicators that\n        Hedgewise tracks or produces.",
        "operationId": "get_available_indicators",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAvailableIndicatorsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/assets/futures/indicators/hedge/{symbol}": {
      "get": {
        "summary": "Get hedge indicator for a future",
        "description": "Returns a list of values indicating the likelihood that the\n        future price will increase, indicating that this is a good time to\n        hedge. The indicator is quintiles of the ratio of the forecasted price\n        trajectory (out to a specified horizon) to the forecasted ulcer index,\n        where the quintiles are given by historical values of this indicator\n        back a specified number of lookback days.",
        "operationId": "get_hedge_indicator",
        "parameters": [
          {
            "name": "symbol",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[A-Z]*",
              "description": "Future symbol",
              "examples": [
                "ZC"
              ],
              "title": "Symbol"
            },
            "description": "Future symbol",
            "example": "ZC"
          },
          {
            "name": "contract",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^\\d{4}[FGHJKMNQUVXZ]$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Contract year and month. _Default value_ : All\n                available contracts",
              "examples": [
                "2025H"
              ],
              "title": "Contract"
            },
            "description": "Contract year and month. _Default value_ : All\n                available contracts",
            "example": "2025H"
          },
          {
            "name": "hedge_horizon",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Number of trading days in the future to hedge. _Default\n                value_ : Full forecast",
              "examples": [
                5,
                10,
                22,
                44,
                86
              ],
              "title": "Hedge Horizon"
            },
            "description": "Number of trading days in the future to hedge. _Default\n                value_ : Full forecast",
            "example": 86
          },
          {
            "name": "lookback_days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Number of trading days to look back when computing\n                indicator quintiles. _Default value_ : 30 days",
              "examples": [
                30
              ],
              "default": 30,
              "title": "Lookback Days"
            },
            "description": "Number of trading days to look back when computing\n                indicator quintiles. _Default value_ : 30 days",
            "example": 30
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start of indicator window (YYYY-MM-DD). The\n                returned object will contain every requested indicator made\n                between start_date and end_date. _Default value_ : most recent\n                date with indicators",
              "examples": [
                "2025-02-02"
              ],
              "title": "Start Date"
            },
            "description": "Start of indicator window (YYYY-MM-DD). The\n                returned object will contain every requested indicator made\n                between start_date and end_date. _Default value_ : most recent\n                date with indicators",
            "example": "2025-02-02"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End of indicator window (YYYY-MM-DD). The\n                returned object will contain every requested indicator made\n                between start_date and end_date. _Default value_ : most recent\n                date with indicators",
              "examples": [
                "2025-03-01"
              ],
              "title": "End Date"
            },
            "description": "End of indicator window (YYYY-MM-DD). The\n                returned object will contain every requested indicator made\n                between start_date and end_date. _Default value_ : most recent\n                date with indicators",
            "example": "2025-03-01"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHedgeIndicatorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/assets/futures/prices/{symbol}": {
      "get": {
        "summary": "Get historical prices for a future",
        "description": "Returns historical price data for a given future symbol.\n        Prices are available for all actively traded contracts on each day.",
        "operationId": "get_futures_prices",
        "parameters": [
          {
            "name": "symbol",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[A-Z]*",
              "description": "Future symbol",
              "examples": [
                "ZC"
              ],
              "title": "Symbol"
            },
            "description": "Future symbol",
            "example": "ZC"
          },
          {
            "name": "contract",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^\\d{4}[FGHJKMNQUVXZ]$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Contract year and month. _Default value_ : All\n                available contracts",
              "examples": [
                "2025H"
              ],
              "title": "Contract"
            },
            "description": "Contract year and month. _Default value_ : All\n                available contracts",
            "example": "2025H"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start of prices window (YYYY-MM-DD). The returned object will\n                contain the entire price history for every contract that traded between\n                `start_date` and `end_date`. Ignored if `contract` is specified. _Default\n                value_ : most recent date with prices",
              "examples": [
                "2025-03-01"
              ],
              "title": "Start Date"
            },
            "description": "Start of prices window (YYYY-MM-DD). The returned object will\n                contain the entire price history for every contract that traded between\n                `start_date` and `end_date`. Ignored if `contract` is specified. _Default\n                value_ : most recent date with prices",
            "example": "2025-03-01"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End of prices window (YYYY-MM-DD). The returned object will\n                contain the entire price history for every contract that traded between\n                `start_date` and `end_date`. Ignored if `contract` is specified. _Default\n                value_ : most recent date with prices",
              "examples": [
                "2025-03-01"
              ],
              "title": "End Date"
            },
            "description": "End of prices window (YYYY-MM-DD). The returned object will\n                contain the entire price history for every contract that traded between\n                `start_date` and `end_date`. Ignored if `contract` is specified. _Default\n                value_ : most recent date with prices",
            "example": "2025-03-01"
          },
          {
            "name": "active_contracts_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Return price data for currently active contracts\n                only. Set to false to also retrieve price data from expired\n                contracts.",
              "default": true,
              "title": "Active Contracts Only"
            },
            "description": "Return price data for currently active contracts\n                only. Set to false to also retrieve price data from expired\n                contracts."
          },
          {
            "name": "rollover_method",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(hist_vol|max_vol|first_notice|last_trade)$",
              "description": "The rollover date is the most recent date for which a given\n                contract was trading as the front month. This parameter specifies the method\n                used to determine the rollover date for contracts. Must be one of \"hist_vol\",\n                \"max_vol\", \"first_notice\", or \"last_trade\" (or left blank for no rollover\n                calculation). \"first_notice\" not available for all commodities, and defaults\n                to \"last_trade\".",
              "examples": [
                "hist_vol",
                "max_vol",
                "first_notice",
                "last_trade"
              ],
              "default": "hist_vol",
              "title": "Rollover Method"
            },
            "description": "The rollover date is the most recent date for which a given\n                contract was trading as the front month. This parameter specifies the method\n                used to determine the rollover date for contracts. Must be one of \"hist_vol\",\n                \"max_vol\", \"first_notice\", or \"last_trade\" (or left blank for no rollover\n                calculation). \"first_notice\" not available for all commodities, and defaults\n                to \"last_trade\".",
            "example": "hist_vol"
          },
          {
            "name": "back_adjust",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Back-adjust prices to account for calendar spread at contract\n            rollover dates. The method used is described here:\n            https://www.sierrachart.com/index.php?page=doc/ContinuousFuturesContractCharts.html#ContinuousFuturesContractDateRuleRolloverBackAdjusted",
              "default": false,
              "title": "Back Adjust"
            },
            "description": "Back-adjust prices to account for calendar spread at contract\n            rollover dates. The method used is described here:\n            https://www.sierrachart.com/index.php?page=doc/ContinuousFuturesContractCharts.html#ContinuousFuturesContractDateRuleRolloverBackAdjusted"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAssetPricesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/forex": {
      "get": {
        "summary": "Get most recent forex prices for all currencies",
        "description": "Get most recent forex prices for all currencies",
        "operationId": "get_all_forex_prices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllForexDataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/forex/{code}": {
      "get": {
        "summary": "Get forex data for one currency",
        "description": "Returns forex price history for a given currency code.",
        "operationId": "get_forex_prices",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[A-Z]{3}$",
              "description": "Forex code",
              "examples": [
                "EUR"
              ],
              "title": "Code"
            },
            "description": "Forex code",
            "example": "EUR"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start of forex data window (YYYY-MM-DD)",
              "examples": [
                "2025-02-23"
              ],
              "title": "Start Date"
            },
            "description": "Start of forex data window (YYYY-MM-DD)",
            "example": "2025-02-23"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End of forex data window (YYYY-MM-DD)",
              "examples": [
                "2025-03-02"
              ],
              "title": "End Date"
            },
            "description": "End of forex data window (YYYY-MM-DD)",
            "example": "2025-03-02"
          },
          {
            "name": "foreign_per_usd",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Return prices as foreign currency per USD. If false, prices will be returned as USD per foreign currency.",
              "default": true,
              "title": "Foreign Per Usd"
            },
            "description": "Return prices as foreign currency per USD. If false, prices will be returned as USD per foreign currency."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetForexDataResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/features_tree": {
      "get": {
        "summary": "Provide the tree structure of the features faceting panel",
        "description": "Provide the organization of a search tree over the features organization",
        "operationId": "get_features_tree",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureTreeModel"
                }
              }
            }
          }
        }
      }
    },
    "/v1/features": {
      "get": {
        "summary": "List available features",
        "description": "Returns the list of all available features that Hedgewise\n        tracks or produces. Some of these are used to produce our price and\n        commodity production forecasts.",
        "operationId": "get_available_features",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^[A-Z]*"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Future symbol",
              "examples": [
                "ZC"
              ],
              "title": "Symbol"
            },
            "description": "Future symbol",
            "example": "ZC"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAvailableFeaturesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/features/historical/{feature_code}": {
      "get": {
        "summary": "Get historical values for a feature",
        "description": "Returns historical values for a given feature code. The\n        feature code is a unique identifier for a specific feature, such as\n        weather or crop health data. Feature codes can be obtained with the\n        `/v1/features` endpoint.",
        "operationId": "get_features_historical_values",
        "parameters": [
          {
            "name": "feature_code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Feature code",
              "examples": [
                "vietnam_t2mean"
              ],
              "title": "Feature Code"
            },
            "description": "Feature code",
            "example": "vietnam_t2mean"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start of feature data window (YYYY-MM-DD)",
              "examples": [
                "2025-02-02"
              ],
              "title": "Start Date"
            },
            "description": "Start of feature data window (YYYY-MM-DD)",
            "example": "2025-02-02"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End of feature data window (YYYY-MM-DD)",
              "examples": [
                "2025-03-02"
              ],
              "title": "End Date"
            },
            "description": "End of feature data window (YYYY-MM-DD)",
            "example": "2025-03-02"
          },
          {
            "name": "add_strength_for_commodity",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^[A-Z]*"
                },
                {
                  "type": "null"
                }
              ],
              "description": "If a future symbol is provided and a model for that commodity exists, a signed strength indicator will be returned in addition to the feature value",
              "examples": [
                "ZC"
              ],
              "title": "Add Strength For Commodity"
            },
            "description": "If a future symbol is provided and a model for that commodity exists, a signed strength indicator will be returned in addition to the feature value",
            "example": "ZC"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFeatureHistoricalResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/features/transform/{feature_code}": {
      "get": {
        "summary": "Get the historical values for a feature transformed via the specified transformation",
        "description": "Provides a facility to apply transformation like computing the average of 5 years or \n        transpose the features time-series to create a year-on-year representation of the time-series\n        of the features Feature codes can be obtained with the `/v1/features` endpoint.",
        "operationId": "get_transformed_feature_values",
        "parameters": [
          {
            "name": "feature_code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Feature code",
              "examples": [
                "vietnam_t2mean"
              ],
              "title": "Feature Code"
            },
            "description": "Feature code",
            "example": "vietnam_t2mean"
          },
          {
            "name": "transform",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-z]*",
              "description": "The type of transform requested. Currently supported are xyavg, rebase, zscore, yoy",
              "examples": [
                "xyavg",
                "rebase",
                "zscore",
                "yoy"
              ],
              "title": "Transform"
            },
            "description": "The type of transform requested. Currently supported are xyavg, rebase, zscore, yoy",
            "example": "xyavg"
          },
          {
            "name": "number_of_years",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "exclusiveMinimum": 0,
              "description": "Number of years to perform the average on. (valid for xyavg and yoy transforms)",
              "examples": [
                5
              ],
              "default": 5,
              "title": "Number Of Years"
            },
            "description": "Number of years to perform the average on. (valid for xyavg and yoy transforms)",
            "example": 5
          },
          {
            "name": "window",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "exclusiveMinimum": 0,
              "description": "Number of observations used in the transformation window. (valid for xyavg and zscore transforms)",
              "examples": [
                3
              ],
              "default": 3,
              "title": "Window"
            },
            "description": "Number of observations used in the transformation window. (valid for xyavg and zscore transforms)",
            "example": 3
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start of transformed feature data window (YYYY-MM-DD) - not relevant for yoy",
              "examples": [
                "2025-02-02"
              ],
              "title": "Start Date"
            },
            "description": "Start of transformed feature data window (YYYY-MM-DD) - not relevant for yoy",
            "example": "2025-02-02"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End of transformed feature data window (YYYY-MM-DD) - not relevant for yoy",
              "examples": [
                "2025-03-02"
              ],
              "title": "End Date"
            },
            "description": "End of transformed feature data window (YYYY-MM-DD) - not relevant for yoy",
            "example": "2025-03-02"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransformedFeatureResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/features/weighted_index/": {
      "get": {
        "summary": "Returns the values of a user-definable index by creating a linear combination of features",
        "description": "Provides a facility to create an index formed as a weighted basket of the list of features provided.\n    The features provided must exist and listed as available at the `/v1/features` endpoint.",
        "operationId": "get_weighted_index",
        "parameters": [
          {
            "name": "weights",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "number"
              },
              "description": "The list of weights to apply on the features selection to create the index",
              "examples": [
                0.5,
                1,
                2
              ],
              "title": "Weights"
            },
            "description": "The list of weights to apply on the features selection to create the index",
            "example": 0.5
          },
          {
            "name": "feature_codes",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The list of features to include in the index",
              "examples": [
                "vietnam_t2mean"
              ],
              "title": "Feature Codes"
            },
            "description": "The list of features to include in the index",
            "example": "vietnam_t2mean"
          },
          {
            "name": "index_label",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "user defined string used to name the weighted index",
              "examples": [
                "user_defined_index"
              ],
              "title": "Index Label"
            },
            "description": "user defined string used to name the weighted index",
            "example": "user_defined_index"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start of transformed feature data window (YYYY-MM-DD)",
              "examples": [
                "2025-02-02"
              ],
              "title": "Start Date"
            },
            "description": "Start of transformed feature data window (YYYY-MM-DD)",
            "example": "2025-02-02"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End of transformed feature data window (YYYY-MM-DD)",
              "examples": [
                "2025-03-02"
              ],
              "title": "End Date"
            },
            "description": "End of transformed feature data window (YYYY-MM-DD)",
            "example": "2025-03-02"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransformedFeatureResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sector_index/{asset_class_symbol}": {
      "get": {
        "summary": "Get the proprietary value of the sector index requested",
        "description": "Return the selected sector or asset class index historical values using a proprietary methodology and composition",
        "operationId": "get_asset_class_index",
        "parameters": [
          {
            "name": "asset_class_symbol",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "A list of Asset Class (sector) identifier requested. ALL can be used to query all asset classes indices at the same time",
              "examples": [
                "GRN",
                "SFT",
                "CUR",
                "ENR",
                "OIL",
                "PRD"
              ],
              "title": "Asset Class Symbol"
            },
            "description": "A list of Asset Class (sector) identifier requested. ALL can be used to query all asset classes indices at the same time"
          },
          {
            "name": "methodology",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-z]*",
              "description": "The type of indexing methodology requested. Equal weight (equalweight) or risk-parity (riskparity) are supported",
              "examples": [
                "riskparity",
                "equalweight"
              ],
              "title": "Methodology"
            },
            "description": "The type of indexing methodology requested. Equal weight (equalweight) or risk-parity (riskparity) are supported",
            "example": "riskparity"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start of the index data window (YYYY-MM-DD) - Index will start at 100 on that date",
              "examples": [
                "2025-02-02"
              ],
              "title": "Start Date"
            },
            "description": "Start of the index data window (YYYY-MM-DD) - Index will start at 100 on that date",
            "example": "2025-02-02"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End of index data window (YYYY-MM-DD)",
              "examples": [
                "2025-03-02"
              ],
              "title": "End Date"
            },
            "description": "End of index data window (YYYY-MM-DD)",
            "example": "2025-03-02"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSectorIndexHistoricalResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/models/performance": {
      "get": {
        "summary": "List available performance metrics and related models",
        "description": "Returns the list of success data that can be requested to assess our forecasting models performance",
        "operationId": "get_available_performance_metrics",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAvailablePerformanceMetricsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/models/performance/{symbol}": {
      "get": {
        "summary": "Get performance related data metrics for a given futures price forecast model at a given horizon.",
        "description": "The metrics values are not provided as-is, but the relevant data and recommended aggregation method for each metric is returned.",
        "operationId": "get_performance_metrics",
        "parameters": [
          {
            "name": "symbol",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[A-Z]*",
              "description": "Future symbol",
              "examples": [
                "ZC"
              ],
              "title": "Symbol"
            },
            "description": "Future symbol",
            "example": "ZC"
          },
          {
            "name": "metric",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^[a-zA-Z]*"
                },
                {
                  "type": "null"
                }
              ],
              "description": "the requested metric as described in the metadata. Default: hitrate",
              "examples": [
                "hitrate"
              ],
              "title": "Metric"
            },
            "description": "the requested metric as described in the metadata. Default: hitrate",
            "example": "hitrate"
          },
          {
            "name": "horizon",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "the horizon (number of business days in the future) of the model of interest. Default, returns for all horizons",
              "examples": [
                5,
                10,
                22,
                44,
                86
              ],
              "title": "Horizon"
            },
            "description": "the horizon (number of business days in the future) of the model of interest. Default, returns for all horizons",
            "example": 10
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start of the performance assessment window (YYYY-MM-DD)",
              "examples": [
                "2025-01-01"
              ],
              "title": "Start Date"
            },
            "description": "Start of the performance assessment window (YYYY-MM-DD)",
            "example": "2025-01-01"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End of the performance assessment window (YYYY-MM-DD)",
              "examples": [
                "2025-03-02"
              ],
              "title": "End Date"
            },
            "description": "End of the performance assessment window (YYYY-MM-DD)",
            "example": "2025-03-02"
          },
          {
            "name": "threshold_on_forecast",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Allows to assess directional performance filtered on days where the % expected change of the forecast is greater than threshold.                 Default: no filter. Valid only for hitrate style metrics. Eg. enter 0.02 for 2%",
              "examples": [
                0,
                0.02,
                0.04
              ],
              "title": "Threshold On Forecast"
            },
            "description": "Allows to assess directional performance filtered on days where the % expected change of the forecast is greater than threshold.                 Default: no filter. Valid only for hitrate style metrics. Eg. enter 0.02 for 2%"
          },
          {
            "name": "threshold_on_actual",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Allows to assess directional performance filtered on days where the % realized price change is greater than threshold.                 Default: no filter. Valid only for hitrate style metrics. Eg. enter 0.02 for 2%",
              "examples": [
                0,
                0.02,
                0.04
              ],
              "title": "Threshold On Actual"
            },
            "description": "Allows to assess directional performance filtered on days where the % realized price change is greater than threshold.                 Default: no filter. Valid only for hitrate style metrics. Eg. enter 0.02 for 2%"
          },
          {
            "name": "use_run_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Use the run date of the forecast to filter the performance assessment window. If false, use the target date. Setting this to false makes the result deterministic from day to day.",
              "default": false,
              "title": "Use Run Date"
            },
            "description": "Use the run date of the forecast to filter the performance assessment window. If false, use the target date. Setting this to false makes the result deterministic from day to day."
          },
          {
            "name": "sigma",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "description": "Number of standard deviations to calculate for ACE. Unused for other metrics.",
              "examples": [
                1,
                2,
                3
              ],
              "default": 1.28,
              "title": "Sigma"
            },
            "description": "Number of standard deviations to calculate for ACE. Unused for other metrics.",
            "example": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPerformanceMetricsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/supply": {
      "get": {
        "summary": "List commodities with supply models",
        "description": "Returns a list of all commodities that have supply models\n        available. Country codes follow the UN/LOCODE standard:\n        https://unece.org/trade/cefact/unlocode-code-list-country-and-territory",
        "operationId": "get_available_supply_commodities",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAvailableSupplyCommoditiesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/supply/{symbol}": {
      "get": {
        "summary": "Get supply data for a commodity and country",
        "description": "Returns historical and forecasted supply data for a given\n        commodity and country. Country codes follow the UN/LOCODE standard:\n        https://unece.org/trade/cefact/unlocode-code-list-country-and-territory",
        "operationId": "get_supply",
        "parameters": [
          {
            "name": "symbol",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[A-Z]*",
              "description": "Asset symbol",
              "examples": [
                "KC"
              ],
              "title": "Symbol"
            },
            "description": "Asset symbol",
            "example": "KC"
          },
          {
            "name": "country_code",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^[A-Z]{2}$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Country code (UN/LOCODE). If blank, return global data.",
              "examples": [
                "BR"
              ],
              "title": "Country Code"
            },
            "description": "Country code (UN/LOCODE). If blank, return global data.",
            "example": "BR"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start of date range for supply forecasts (YYYY-MM-DD)",
              "examples": [
                "2024-03-02"
              ],
              "title": "Start Date"
            },
            "description": "Start of date range for supply forecasts (YYYY-MM-DD)",
            "example": "2024-03-02"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End of date range for supply forecasts (YYYY-MM-DD)",
              "examples": [
                "2025-03-02"
              ],
              "title": "End Date"
            },
            "description": "End of date range for supply forecasts (YYYY-MM-DD)",
            "example": "2025-03-02"
          },
          {
            "name": "get_feature_contributions",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Return feature contributions for requested forecasts.",
              "default": false,
              "title": "Get Feature Contributions"
            },
            "description": "Return feature contributions for requested forecasts."
          },
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Supply model to use for forecasting.",
              "examples": [
                "v2_wholecountry_92to23_interval10_yesyoy_xgb"
              ],
              "default": "v2_wholecountry_92to23_interval10_yesyoy_xgb",
              "title": "Model"
            },
            "description": "Supply model to use for forecasting.",
            "example": "v2_wholecountry_92to23_interval10_yesyoy_xgb"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSupplyResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Asset": {
        "properties": {
          "symbol": {
            "type": "string",
            "title": "Symbol"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "asset_class_symbol": {
            "type": "string",
            "title": "Asset Class Symbol"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "tick_size": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tick Size"
          },
          "unit": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unit"
          },
          "sku": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sku"
          },
          "code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code"
          },
          "price_file": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price File"
          },
          "market_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Market Date"
          },
          "exchange": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exchange"
          }
        },
        "type": "object",
        "required": [
          "symbol",
          "type",
          "asset_class_symbol",
          "name",
          "sku",
          "code",
          "price_file"
        ],
        "title": "Asset"
      },
      "AssetClass": {
        "properties": {
          "symbol": {
            "type": "string",
            "title": "Symbol"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "symbol",
          "name"
        ],
        "title": "AssetClass"
      },
      "AssetForecastData": {
        "properties": {
          "asset": {
            "$ref": "#/components/schemas/Asset"
          },
          "contracts": {
            "items": {
              "$ref": "#/components/schemas/ContractWithForecasts"
            },
            "type": "array",
            "title": "Contracts"
          }
        },
        "type": "object",
        "required": [
          "asset",
          "contracts"
        ],
        "title": "AssetForecastData"
      },
      "AssetIndicatorData": {
        "properties": {
          "asset": {
            "$ref": "#/components/schemas/Asset"
          },
          "contracts": {
            "items": {
              "$ref": "#/components/schemas/ContractWithIndicator"
            },
            "type": "array",
            "title": "Contracts"
          }
        },
        "type": "object",
        "required": [
          "asset",
          "contracts"
        ],
        "title": "AssetIndicatorData"
      },
      "AssetLongTermForecastData": {
        "properties": {
          "asset": {
            "$ref": "#/components/schemas/Asset"
          },
          "long_term_forecast": {
            "items": {
              "$ref": "#/components/schemas/LongTermForecast"
            },
            "type": "array",
            "title": "Long Term Forecast"
          }
        },
        "type": "object",
        "required": [
          "asset",
          "long_term_forecast"
        ],
        "title": "AssetLongTermForecastData"
      },
      "AssetPriceData": {
        "properties": {
          "asset": {
            "$ref": "#/components/schemas/Asset"
          },
          "front_month": {
            "type": "string",
            "title": "Front Month"
          },
          "market_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Market Date"
          },
          "contracts": {
            "items": {
              "$ref": "#/components/schemas/ContractWithPriceTicks"
            },
            "type": "array",
            "title": "Contracts"
          }
        },
        "type": "object",
        "required": [
          "asset",
          "front_month",
          "contracts"
        ],
        "title": "AssetPriceData"
      },
      "AvailableFuture": {
        "properties": {
          "symbol": {
            "type": "string",
            "title": "Symbol"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "asset_class_symbol": {
            "type": "string",
            "title": "Asset Class Symbol"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "tick_size": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tick Size"
          },
          "unit": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unit"
          },
          "sku": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sku"
          },
          "code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code"
          },
          "price_file": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price File"
          },
          "market_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Market Date"
          },
          "exchange": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exchange"
          },
          "has_forecast": {
            "type": "boolean",
            "title": "Has Forecast"
          }
        },
        "type": "object",
        "required": [
          "symbol",
          "type",
          "asset_class_symbol",
          "name",
          "sku",
          "code",
          "price_file",
          "has_forecast"
        ],
        "title": "AvailableFuture"
      },
      "AvailableIndicator": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "assets": {
            "items": {
              "$ref": "#/components/schemas/Asset"
            },
            "type": "array",
            "title": "Assets"
          }
        },
        "type": "object",
        "required": [
          "name",
          "assets"
        ],
        "title": "AvailableIndicator"
      },
      "AvailableSupplyModels": {
        "properties": {
          "model": {
            "type": "string",
            "title": "Model"
          },
          "symbol": {
            "type": "string",
            "title": "Symbol"
          },
          "commodity": {
            "type": "string",
            "title": "Commodity"
          },
          "countries": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Countries"
          }
        },
        "type": "object",
        "required": [
          "model",
          "symbol",
          "commodity",
          "countries"
        ],
        "title": "AvailableSupplyModels"
      },
      "Contract": {
        "properties": {
          "asset_symbol": {
            "type": "string",
            "title": "Asset Symbol"
          },
          "symbol": {
            "type": "string",
            "title": "Symbol"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "last_tick": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Tick"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "asset_symbol",
          "symbol",
          "name"
        ],
        "title": "Contract"
      },
      "ContractWithForecasts": {
        "properties": {
          "asset_symbol": {
            "type": "string",
            "title": "Asset Symbol"
          },
          "symbol": {
            "type": "string",
            "title": "Symbol"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "last_tick": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Tick"
              },
              {
                "type": "null"
              }
            ]
          },
          "forecasts": {
            "items": {
              "$ref": "#/components/schemas/Forecast"
            },
            "type": "array",
            "title": "Forecasts"
          },
          "market_drivers": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MarketDriver"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Market Drivers"
          },
          "moving_averages": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MovingAverage"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Moving Averages"
          }
        },
        "type": "object",
        "required": [
          "asset_symbol",
          "symbol",
          "name",
          "forecasts",
          "market_drivers",
          "moving_averages"
        ],
        "title": "ContractWithForecasts"
      },
      "ContractWithIndicator": {
        "properties": {
          "asset_symbol": {
            "type": "string",
            "title": "Asset Symbol"
          },
          "symbol": {
            "type": "string",
            "title": "Symbol"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "last_tick": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Tick"
              },
              {
                "type": "null"
              }
            ]
          },
          "indicator": {
            "$ref": "#/components/schemas/Indicator"
          }
        },
        "type": "object",
        "required": [
          "asset_symbol",
          "symbol",
          "name",
          "indicator"
        ],
        "title": "ContractWithIndicator"
      },
      "ContractWithPriceTicks": {
        "properties": {
          "asset_symbol": {
            "type": "string",
            "title": "Asset Symbol"
          },
          "symbol": {
            "type": "string",
            "title": "Symbol"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "last_tick": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Tick"
              },
              {
                "type": "null"
              }
            ]
          },
          "rollover_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rollover Date"
          },
          "ticks": {
            "items": {
              "$ref": "#/components/schemas/Tick"
            },
            "type": "array",
            "title": "Ticks"
          }
        },
        "type": "object",
        "required": [
          "asset_symbol",
          "symbol",
          "name",
          "ticks"
        ],
        "title": "ContractWithPriceTicks"
      },
      "Data": {
        "properties": {
          "asset_classes": {
            "items": {
              "$ref": "#/components/schemas/AssetClass"
            },
            "type": "array",
            "title": "Asset Classes"
          },
          "assets": {
            "items": {
              "$ref": "#/components/schemas/Asset"
            },
            "type": "array",
            "title": "Assets"
          },
          "contracts": {
            "items": {
              "$ref": "#/components/schemas/Contract"
            },
            "type": "array",
            "title": "Contracts"
          }
        },
        "type": "object",
        "required": [
          "asset_classes",
          "assets",
          "contracts"
        ],
        "title": "Data"
      },
      "Feature": {
        "properties": {
          "feature_code": {
            "type": "string",
            "title": "Feature Code"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "long_name": {
            "type": "string",
            "title": "Long Name"
          },
          "variable_type": {
            "type": "string",
            "title": "Variable Type"
          },
          "main_commodity": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Main Commodity"
          },
          "symbols": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Symbols"
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "statistic_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Statistic Type"
          },
          "unit": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unit"
          },
          "source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source"
          },
          "recent_influence": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recent Influence"
          }
        },
        "type": "object",
        "required": [
          "feature_code",
          "type",
          "long_name",
          "variable_type"
        ],
        "title": "Feature"
      },
      "FeatureCategory": {
        "properties": {
          "category": {
            "type": "string",
            "title": "Category"
          },
          "contribution": {
            "type": "number",
            "title": "Contribution"
          },
          "drilldown": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/FeatureDrilldown"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Drilldown"
          }
        },
        "type": "object",
        "required": [
          "category",
          "contribution",
          "drilldown"
        ],
        "title": "FeatureCategory"
      },
      "FeatureDrilldown": {
        "properties": {
          "feature_code": {
            "type": "string",
            "title": "Feature Code"
          },
          "contribution": {
            "type": "number",
            "title": "Contribution"
          },
          "description": {
            "type": "string",
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "feature_code",
          "contribution",
          "description"
        ],
        "title": "FeatureDrilldown"
      },
      "FeatureHistoricalData": {
        "properties": {
          "feature_code": {
            "type": "string",
            "title": "Feature Code"
          },
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date"
          },
          "value": {
            "type": "number",
            "title": "Value"
          },
          "strength": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Strength"
          },
          "phenology_stage": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phenology Stage"
          }
        },
        "type": "object",
        "required": [
          "feature_code",
          "date",
          "value"
        ],
        "title": "FeatureHistoricalData"
      },
      "FeatureNode": {
        "properties": {
          "label": {
            "type": "string",
            "title": "Label"
          },
          "attribute": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attribute"
          },
          "value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "children": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/FeatureNode"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Children"
          }
        },
        "type": "object",
        "required": [
          "label"
        ],
        "title": "FeatureNode"
      },
      "FeatureTransformedHistoricalData": {
        "properties": {
          "xform_feature_code": {
            "type": "string",
            "title": "Xform Feature Code"
          },
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date"
          },
          "value": {
            "type": "number",
            "title": "Value"
          },
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label"
          }
        },
        "type": "object",
        "required": [
          "xform_feature_code",
          "date",
          "value"
        ],
        "title": "FeatureTransformedHistoricalData"
      },
      "FeatureTreeModel": {
        "properties": {
          "type": {
            "additionalProperties": {
              "items": {
                "$ref": "#/components/schemas/FeatureNode"
              },
              "type": "array"
            },
            "type": "object",
            "title": "Type"
          },
          "category": {
            "additionalProperties": {
              "items": {
                "$ref": "#/components/schemas/FeatureNode"
              },
              "type": "array"
            },
            "type": "object",
            "title": "Category"
          },
          "region": {
            "additionalProperties": {
              "items": {
                "$ref": "#/components/schemas/FeatureNode"
              },
              "type": "array"
            },
            "type": "object",
            "title": "Region"
          }
        },
        "type": "object",
        "required": [
          "type",
          "category",
          "region"
        ],
        "title": "FeatureTreeModel"
      },
      "Forecast": {
        "properties": {
          "model": {
            "type": "string",
            "title": "Model"
          },
          "forecast_date": {
            "type": "string",
            "format": "date-time",
            "title": "Forecast Date"
          },
          "close_price_trajectory": {
            "items": {
              "$ref": "#/components/schemas/ForecastTick"
            },
            "type": "array",
            "title": "Close Price Trajectory"
          }
        },
        "type": "object",
        "required": [
          "model",
          "forecast_date",
          "close_price_trajectory"
        ],
        "title": "Forecast"
      },
      "ForecastTick": {
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time",
            "title": "Date"
          },
          "close_price": {
            "type": "number",
            "title": "Close Price"
          },
          "lower_bound_1_sigma": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lower Bound 1 Sigma"
          },
          "upper_bound_1_sigma": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Upper Bound 1 Sigma"
          },
          "lower_bound_2_sigma": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lower Bound 2 Sigma"
          },
          "upper_bound_2_sigma": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Upper Bound 2 Sigma"
          },
          "lower_bound_3_sigma": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lower Bound 3 Sigma"
          },
          "upper_bound_3_sigma": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Upper Bound 3 Sigma"
          },
          "interpolated": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interpolated",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "date",
          "close_price"
        ],
        "title": "ForecastTick"
      },
      "ForexData": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "market_date": {
            "type": "string",
            "format": "date-time",
            "title": "Market Date"
          },
          "prices": {
            "items": {
              "$ref": "#/components/schemas/ForexTick"
            },
            "type": "array",
            "title": "Prices"
          }
        },
        "type": "object",
        "required": [
          "code",
          "name",
          "market_date",
          "prices"
        ],
        "title": "ForexData"
      },
      "ForexTick": {
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time",
            "title": "Date"
          },
          "price": {
            "type": "number",
            "title": "Price"
          }
        },
        "type": "object",
        "required": [
          "date",
          "price"
        ],
        "title": "ForexTick"
      },
      "GetAllForexDataResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "enum": [
              true
            ],
            "const": true,
            "title": "Success"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/ForexData"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "title": "GetAllForexDataResponse"
      },
      "GetAssetCalendarResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "enum": [
              true
            ],
            "const": true,
            "title": "Success"
          },
          "data": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "title": "GetAssetCalendarResponse"
      },
      "GetAssetForecastsResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "enum": [
              true
            ],
            "const": true,
            "title": "Success"
          },
          "data": {
            "$ref": "#/components/schemas/AssetForecastData"
          }
        },
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "title": "GetAssetForecastsResponse"
      },
      "GetAssetLongTermForecastsResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "enum": [
              true
            ],
            "const": true,
            "title": "Success"
          },
          "data": {
            "$ref": "#/components/schemas/AssetLongTermForecastData"
          }
        },
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "title": "GetAssetLongTermForecastsResponse"
      },
      "GetAssetPricesResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "enum": [
              true
            ],
            "const": true,
            "title": "Success"
          },
          "data": {
            "$ref": "#/components/schemas/AssetPriceData"
          }
        },
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "title": "GetAssetPricesResponse"
      },
      "GetAvailableAssetCategoriesResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "enum": [
              true
            ],
            "const": true,
            "title": "Success"
          },
          "data": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "title": "GetAvailableAssetCategoriesResponse"
      },
      "GetAvailableFeaturesResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "enum": [
              true
            ],
            "const": true,
            "title": "Success"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/Feature"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "title": "GetAvailableFeaturesResponse"
      },
      "GetAvailableFuturesResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "enum": [
              true
            ],
            "const": true,
            "title": "Success"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/AvailableFuture"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "title": "GetAvailableFuturesResponse"
      },
      "GetAvailableIndicatorsResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "enum": [
              true
            ],
            "const": true,
            "title": "Success"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/AvailableIndicator"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "title": "GetAvailableIndicatorsResponse"
      },
      "GetAvailablePerformanceMetricsResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "enum": [
              true
            ],
            "const": true,
            "title": "Success"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/PerformanceMetric"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "title": "GetAvailablePerformanceMetricsResponse"
      },
      "GetAvailableSupplyCommoditiesResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "enum": [
              true
            ],
            "const": true,
            "title": "Success"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/AvailableSupplyModels"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "title": "GetAvailableSupplyCommoditiesResponse"
      },
      "GetDataResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "enum": [
              true
            ],
            "const": true,
            "title": "Success"
          },
          "data": {
            "$ref": "#/components/schemas/Data"
          }
        },
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "title": "GetDataResponse"
      },
      "GetFeatureHistoricalResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "enum": [
              true
            ],
            "const": true,
            "title": "Success"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/FeatureHistoricalData"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "title": "GetFeatureHistoricalResponse"
      },
      "GetForexDataResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "enum": [
              true
            ],
            "const": true,
            "title": "Success"
          },
          "data": {
            "$ref": "#/components/schemas/ForexData"
          }
        },
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "title": "GetForexDataResponse"
      },
      "GetHedgeIndicatorResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "enum": [
              true
            ],
            "const": true,
            "title": "Success"
          },
          "data": {
            "$ref": "#/components/schemas/AssetIndicatorData"
          }
        },
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "title": "GetHedgeIndicatorResponse"
      },
      "GetPerformanceMetricsResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "enum": [
              true
            ],
            "const": true,
            "title": "Success"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/PerformanceMetricResult"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "title": "GetPerformanceMetricsResponse"
      },
      "GetSectorIndexHistoricalResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "enum": [
              true
            ],
            "const": true,
            "title": "Success"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/SectorIndexHistoricalData"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "title": "GetSectorIndexHistoricalResponse"
      },
      "GetSupplyResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "enum": [
              true
            ],
            "const": true,
            "title": "Success"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/SupplyData"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "title": "GetSupplyResponse"
      },
      "GetTransformedFeatureResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "enum": [
              true
            ],
            "const": true,
            "title": "Success"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/FeatureTransformedHistoricalData"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "title": "GetTransformedFeatureResponse"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Indicator": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "series": {
            "items": {
              "$ref": "#/components/schemas/IndicatorTick"
            },
            "type": "array",
            "title": "Series"
          }
        },
        "type": "object",
        "required": [
          "name",
          "series"
        ],
        "title": "Indicator"
      },
      "IndicatorTick": {
        "properties": {
          "date": {
            "type": "string",
            "title": "Date"
          },
          "value": {
            "type": "number",
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "date",
          "value"
        ],
        "title": "IndicatorTick"
      },
      "LongTermForecast": {
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date"
          },
          "contract": {
            "type": "string",
            "title": "Contract"
          },
          "price_increase": {
            "type": "boolean",
            "title": "Price Increase"
          }
        },
        "type": "object",
        "required": [
          "date",
          "contract",
          "price_increase"
        ],
        "title": "LongTermForecast"
      },
      "MarketDriver": {
        "properties": {
          "model": {
            "type": "string",
            "title": "Model"
          },
          "forecast_date": {
            "type": "string",
            "format": "date-time",
            "title": "Forecast Date"
          },
          "horizon": {
            "type": "integer",
            "title": "Horizon"
          },
          "categories": {
            "items": {
              "$ref": "#/components/schemas/FeatureCategory"
            },
            "type": "array",
            "title": "Categories"
          }
        },
        "type": "object",
        "required": [
          "model",
          "forecast_date",
          "horizon",
          "categories"
        ],
        "title": "MarketDriver"
      },
      "MovingAverage": {
        "properties": {
          "horizon": {
            "type": "integer",
            "title": "Horizon"
          },
          "moving_average": {
            "items": {
              "$ref": "#/components/schemas/MovingAverageTick"
            },
            "type": "array",
            "title": "Moving Average"
          }
        },
        "type": "object",
        "required": [
          "horizon",
          "moving_average"
        ],
        "title": "MovingAverage"
      },
      "MovingAverageTick": {
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time",
            "title": "Date"
          },
          "value": {
            "type": "number",
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "date",
          "value"
        ],
        "title": "MovingAverageTick"
      },
      "PerformanceMetric": {
        "properties": {
          "metric": {
            "type": "string",
            "title": "Metric"
          },
          "description": {
            "type": "string",
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "metric",
          "description"
        ],
        "title": "PerformanceMetric"
      },
      "PerformanceMetricResult": {
        "properties": {
          "metric": {
            "type": "string",
            "title": "Metric"
          },
          "date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date"
          },
          "horizon": {
            "type": "integer",
            "title": "Horizon"
          },
          "value": {
            "type": "number",
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "metric",
          "horizon",
          "value"
        ],
        "title": "PerformanceMetricResult"
      },
      "PingResponse": {
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "available"
            ],
            "const": "available",
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "PingResponse"
      },
      "SectorIndexHistoricalData": {
        "properties": {
          "asset_class": {
            "type": "string",
            "title": "Asset Class"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/SectorIndexTick"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "asset_class",
          "data"
        ],
        "title": "SectorIndexHistoricalData"
      },
      "SectorIndexTick": {
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date"
          },
          "value": {
            "type": "number",
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "date",
          "value"
        ],
        "title": "SectorIndexTick"
      },
      "SupplyData": {
        "properties": {
          "symbol": {
            "type": "string",
            "title": "Symbol"
          },
          "commodity": {
            "type": "string",
            "title": "Commodity"
          },
          "country_code": {
            "type": "string",
            "title": "Country Code"
          },
          "country": {
            "type": "string",
            "title": "Country"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "title": "Date"
          },
          "model": {
            "type": "string",
            "title": "Model"
          },
          "forecasted_supply": {
            "type": "number",
            "title": "Forecasted Supply"
          },
          "reported_supply": {
            "type": "number",
            "title": "Reported Supply"
          },
          "reporting_agency": {
            "type": "string",
            "title": "Reporting Agency"
          },
          "unit": {
            "type": "string",
            "title": "Unit"
          },
          "feature_contributions": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/FeatureCategory"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feature Contributions"
          }
        },
        "type": "object",
        "required": [
          "symbol",
          "commodity",
          "country_code",
          "country",
          "date",
          "model",
          "forecasted_supply",
          "reported_supply",
          "reporting_agency",
          "unit",
          "feature_contributions"
        ],
        "title": "SupplyData"
      },
      "Tick": {
        "properties": {
          "datetime": {
            "type": "string",
            "format": "date-time",
            "title": "Datetime"
          },
          "open": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Open"
          },
          "high": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "High"
          },
          "low": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Low"
          },
          "close": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Close"
          },
          "volume": {
            "type": "integer",
            "title": "Volume"
          },
          "open_interest": {
            "type": "integer",
            "title": "Open Interest"
          },
          "change": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Change"
          }
        },
        "type": "object",
        "required": [
          "datetime",
          "volume",
          "open_interest"
        ],
        "title": "Tick"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}